# https://github.com/actions/starter-workflows/blob/fe49f6631698e7cd6ad2d94183791b61f9a59bfe/ci/google.yml
name: Deploy demo-nextjs-markdown
on:
  push:
    branches: [master]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: autopilot-cluster-1
  GKE_ZONE: asia-southeast1
  DEPLOYMENT_NAME: demo-nextjs-markdown-deployment
  IMAGE: asia.gcr.io/${{ secrets.GKE_PROJECT }}/demo-nextjs-markdown # TODO check if should "demo-nextjs-markdown" or "$PROJECT_ID/demo-nextjs-markdown"
  IMAGE_TAG: $GITHUB_SHA

jobs:
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}

    # Configure Docker to use the gcloud command-line tool as a credential
    # helper for authentication
    - run: |-
        gcloud --quiet auth configure-docker

    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    - name: Build the docker image
      run: BUILD_IMAGE=${{ env.IMAGE }} BUILD_TAG=${{ env.IMAGE_TAG }} docker-compose build
    
    # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "${{ env.IMAGE }}:${{ env.IMAGE_TAG }}"

    # # Set up kustomize
    # - name: Set up Kustomize
    #   run: |-
    #     curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
    #     chmod u+x ./kustomize

    # Set up kustomize
    - name: Set up Kustomize
      # curl -sfLo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.1.2/kustomize_v4.1.2_darwin_amd64.tar.gz
      run: |-
        curl -sfLo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.1.2/kustomize_v4.1.2_linux_amd64.tar.gz
        tar -xvf kustomize.tar.gz
        chmod u+x ./kustomize
    
    # Deploy the Docker image to the GKE cluster
    - name: Deploy
      # run: |-
      #   ./kustomize edit set image gcr.io/PROJECT_ID/IMAGE:TAG=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA
      #   ./kustomize build . | kubectl apply -f -
      #   kubectl rollout status deployment/$DEPLOYMENT_NAME
      #   kubectl get services -o wide
      run: |-
        ./kustomize edit set image asia.gcr.io/PROJECT_ID/IMAGE:TAG=${{ env.IMAGE }}:${{ env.IMAGE_TAG }}
        ./kustomize build .
        ./kustomize build . | kubectl apply -f -
        # cat ./deployment.yaml
        # cat ./service.yaml
        kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
        kubectl get services -o wide


# https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.1.2/kustomize_v4.1.2_linux_amd64.tar.gz
# curl -sfLo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.1.2/kustomize_v4.1.2_linux_amd64.tar.gz
# mkdir kustomize && curl -sfLo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.1.2/kustomize_v4.1.2_linux_amd64.tar.gz | tar -xz - -C kustomize
# mkdir kustomize && curl -sfLo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.1.2/kustomize_v4.1.2_linux_amd64.tar.gz | tar -xz - -C kustomize
# curl -sfLo kustomize.tar.gz https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv4.1.2/kustomize_v4.1.2_linux_amd64.tar.gz
# mkdir kustomize && tar -xvf kustomize.tar.gz -C ./kustomize
# mkdir kustomize && tar -xvfz kustomize.tar.gz -C ./kustomize
# tar -xvf kustomize.tar.gz